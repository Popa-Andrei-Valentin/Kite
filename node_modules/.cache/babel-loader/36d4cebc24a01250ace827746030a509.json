{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Popa Andrei\\\\Desktop\\\\kite-surfing\\\\kite\\\\src\\\\components\\\\Spots.js\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Spots = _ref => {\n  let {\n    spot\n  } = _ref;\n  console.log(spot);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Array.isArray(spot) ? spot.map(spot => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [spot.lat, spot.long],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [\"Testing. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 26\n        }, this), \" testing x2\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 15\n      }, this)\n    }, spot.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)) : null\n  }, void 0, false);\n};\n\n_c = Spots;\nexport default Spots;\n\nvar _c;\n\n$RefreshReg$(_c, \"Spots\");","map":{"version":3,"sources":["C:/Users/Popa Andrei/Desktop/kite-surfing/kite/src/components/Spots.js"],"names":["MapContainer","TileLayer","Marker","Popup","Spots","spot","console","log","Array","isArray","map","lat","long","id"],"mappings":";AAAA,SAASA,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,eAAvD;;;;AAEA,MAAMC,KAAK,GAAG,QAAc;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,sBACE;AAAA,cACGG,KAAK,CAACC,OAAN,CAAcJ,IAAd,IACGA,IAAI,CAACK,GAAL,CAAUL,IAAD,iBACP,QAAC,MAAD;AAAsB,MAAA,QAAQ,EAAE,CAACA,IAAI,CAACM,GAAN,EAAWN,IAAI,CAACO,IAAhB,CAAhC;AAAA,6BACE,QAAC,KAAD;AAAA,6CACW;AAAA;AAAA;AAAA;AAAA,gBADX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAAaP,IAAI,CAACQ,EAAlB;AAAA;AAAA;AAAA;AAAA,YADF,CADH,GAQG;AATN,mBADF;AAaD,CAfD;;KAAMT,K;AAiBN,eAAeA,KAAf","sourcesContent":["import { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\n\r\nconst Spots = ({ spot }) => {\r\n  console.log(spot);\r\n  return (\r\n    <>\r\n      {Array.isArray(spot)\r\n        ? spot.map((spot) => (\r\n            <Marker key={spot.id} position={[spot.lat, spot.long]}>\r\n              <Popup>\r\n                Testing. <br /> testing x2\r\n              </Popup>\r\n            </Marker>\r\n          ))\r\n        : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Spots;\r\n"]},"metadata":{},"sourceType":"module"}