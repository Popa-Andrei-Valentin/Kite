{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Popa Andrei\\\\Desktop\\\\kite-surfing\\\\kite\\\\src\\\\components\\\\Spots.js\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Spots = _ref => {\n  let {\n    Spots\n  } = _ref;\n  console.log(spots);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: spots.map(spot => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [spot.lat, spot.long],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [\"Testing. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 22\n        }, this), \" testing x2\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this)\n    }, spot.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n\n_c = Spots;\nexport default Spots;\n\nvar _c;\n\n$RefreshReg$(_c, \"Spots\");","map":{"version":3,"sources":["C:/Users/Popa Andrei/Desktop/kite-surfing/kite/src/components/Spots.js"],"names":["MapContainer","TileLayer","Marker","Popup","Spots","console","log","spots","map","spot","lat","long","id"],"mappings":";AAAA,SAASA,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,eAAvD;;;;AAEA,MAAMC,KAAK,GAAG,QAAe;AAAA,MAAd;AAAEA,IAAAA;AAAF,GAAc;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,sBACE;AAAA,cACGA,KAAK,CAACC,GAAN,CAAWC,IAAD,iBACT,QAAC,MAAD;AAAsB,MAAA,QAAQ,EAAE,CAACA,IAAI,CAACC,GAAN,EAAWD,IAAI,CAACE,IAAhB,CAAhC;AAAA,6BACE,QAAC,KAAD;AAAA,6CACW;AAAA;AAAA;AAAA;AAAA,gBADX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAAaF,IAAI,CAACG,EAAlB;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADF;AAWD,CAbD;;KAAMR,K;AAeN,eAAeA,KAAf","sourcesContent":["import { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\n\r\nconst Spots = ({ Spots }) => {\r\n  console.log(spots);\r\n  return (\r\n    <>\r\n      {spots.map((spot) => (\r\n        <Marker key={spot.id} position={[spot.lat, spot.long]}>\r\n          <Popup>\r\n            Testing. <br /> testing x2\r\n          </Popup>\r\n        </Marker>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Spots;\r\n"]},"metadata":{},"sourceType":"module"}