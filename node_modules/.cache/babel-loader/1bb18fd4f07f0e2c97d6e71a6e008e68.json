{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Popa Andrei\\\\Desktop\\\\kite-surfing\\\\kite\\\\src\\\\components\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Table = _ref => {\n  _s();\n\n  let {\n    spot,\n    currentSort\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortKey, setSortKey] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Locations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\",\n      onChange: event => {\n        setSearchTerm(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Latitude\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Longitude\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Wind Prob.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"When to go\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Array.isArray(spot) ? spot.filter(spot => {\n          // Search function\n          if (searchTerm == \"\") {\n            return spot;\n          } else if ( // Searching location name\n          spot.name.toLowerCase().includes(searchTerm.toLowerCase()) || // Searching location country\n          spot.country.toLowerCase().includes(searchTerm.toLowerCase()) || // Searching month to go\n          spot.month.toLowerCase().includes(searchTerm.toLowerCase())) {\n            return spot;\n          }\n        }).map(spot => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: spot.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: spot.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: spot.lat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: spot.long\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [spot.probability, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: spot.month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)]\n        }, spot.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }, this)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Table, \"qj8Zul7PU+1/fI21x8ray9vhiCg=\");\n\n_c = Table;\nTable.defaultProps = {\n  currentSort: \"default\"\n};\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/Popa Andrei/Desktop/kite-surfing/kite/src/components/Table.js"],"names":["useState","Table","spot","currentSort","searchTerm","setSearchTerm","sortKey","setSortKey","sortOrder","setSortOrder","event","target","value","Array","isArray","filter","name","toLowerCase","includes","country","month","map","lat","long","probability","id","defaultProps"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst Table = ({ spot, currentSort }) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [sortKey, setSortKey] = useState(\"\");\r\n  const [sortOrder, setSortOrder] = useState(\"\");\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Locations</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        onChange={(event) => {\r\n          setSearchTerm(event.target.value);\r\n        }}\r\n      />\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Country</th>\r\n            <th>Latitude</th>\r\n            <th>Longitude</th>\r\n            <th>Wind Prob.</th>\r\n            <th>When to go</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* Checking if API fetch is done */}\r\n          {Array.isArray(spot)\r\n            ? spot\r\n                .filter((spot) => {\r\n                  // Search function\r\n                  if (searchTerm == \"\") {\r\n                    return spot;\r\n                  } else if (\r\n                    // Searching location name\r\n                    spot.name\r\n                      .toLowerCase()\r\n                      .includes(searchTerm.toLowerCase()) ||\r\n                    // Searching location country\r\n                    spot.country\r\n                      .toLowerCase()\r\n                      .includes(searchTerm.toLowerCase()) ||\r\n                    // Searching month to go\r\n                    spot.month.toLowerCase().includes(searchTerm.toLowerCase())\r\n                  ) {\r\n                    return spot;\r\n                  }\r\n                })\r\n                .map((spot) => (\r\n                  <tr key={spot.id}>\r\n                    <td>{spot.name}</td>\r\n                    <td>{spot.country}</td>\r\n                    <td>{spot.lat}</td>\r\n                    <td>{spot.long}</td>\r\n                    <td>{spot.probability}%</td>\r\n                    <td>{spot.month}</td>\r\n                    <td />\r\n                  </tr>\r\n                ))\r\n            : null}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nTable.defaultProps = {\r\n  currentSort: \"default\",\r\n};\r\nexport default Table;\r\n"]},"metadata":{},"sourceType":"module"}