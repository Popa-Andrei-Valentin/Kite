{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Popa Andrei\\\\Desktop\\\\kite-surfing\\\\kite\\\\src\\\\components\\\\Spots.js\";\nimport { text } from \"@fortawesome/fontawesome-svg-core\";\nimport { setOptions } from \"leaflet\";\nimport { useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport Button from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Spots = _ref => {\n  let {\n    spot,\n    fetchSpotsById,\n    toggleFavorite\n  } = _ref;\n  let text = \"Add to favorites\";\n  let design = \"bg-yellow-400 text-black text-sm rounded px-2 py-[0.15rem] hover:bg-yellow-500 \";\n\n  const toggleBtn = async id => {\n    await fetchSpotsById(id);\n\n    if (spot.favourite) {\n      text = \"Delete from favourite\";\n      design = \" bg-yellow-400 text-black text-sm rounded px-2 py-[0.15rem] hover:bg-yellow-500 \";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Array.isArray(spot) ? spot.map(spot => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [spot.lat, spot.long],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: spot.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: spot.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"WIND PROBABILITY\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 19\n          }, this), spot.probability, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"LONGITUDE:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 19\n          }, this), spot.long]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"LATITUDE:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 19\n          }, this), spot.lat]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"WHEN TO GO:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 19\n          }, this), spot.month]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: design,\n          onClick: async () => {\n            await toggleFavorite(spot.id);\n            await toggleBtn(spot.id);\n          },\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this)\n    }, spot.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)) : null\n  }, void 0, false);\n};\n\n_c = Spots;\nexport default Spots;\n\nvar _c;\n\n$RefreshReg$(_c, \"Spots\");","map":{"version":3,"sources":["C:/Users/Popa Andrei/Desktop/kite-surfing/kite/src/components/Spots.js"],"names":["text","setOptions","useState","MapContainer","TileLayer","Marker","Popup","Button","Spots","spot","fetchSpotsById","toggleFavorite","design","toggleBtn","id","favourite","Array","isArray","map","lat","long","name","country","probability","month"],"mappings":";AAAA,SAASA,IAAT,QAAqB,mCAArB;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,eAAvD;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;;AAEA,MAAMC,KAAK,GAAG,QAA8C;AAAA,MAA7C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,cAAR;AAAwBC,IAAAA;AAAxB,GAA6C;AAC1D,MAAIX,IAAI,GAAG,kBAAX;AACA,MAAIY,MAAM,GACR,iFADF;;AAEA,QAAMC,SAAS,GAAG,MAAOC,EAAP,IAAc;AAC9B,UAAMJ,cAAc,CAACI,EAAD,CAApB;;AACA,QAAIL,IAAI,CAACM,SAAT,EAAoB;AAClBf,MAAAA,IAAI,GAAG,uBAAP;AACAY,MAAAA,MAAM,GACJ,kFADF;AAED;AACF,GAPD;;AAQA,sBACE;AAAA,cACGI,KAAK,CAACC,OAAN,CAAcR,IAAd,IACGA,IAAI,CAACS,GAAL,CAAUT,IAAD,iBACP,QAAC,MAAD;AAAsB,MAAA,QAAQ,EAAE,CAACA,IAAI,CAACU,GAAN,EAAWV,IAAI,CAACW,IAAhB,CAAhC;AAAA,6BACE,QAAC,KAAD;AAAA,gCACE;AAAA,oBAAKX,IAAI,CAACY;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKZ,IAAI,CAACa;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,sDAEE;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGGb,IAAI,CAACc,WAHR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAQE;AAAA,gDAEE;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGGd,IAAI,CAACW,IAHR;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAaE;AAAA,+CAEE;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGGX,IAAI,CAACU,GAHR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAkBE;AAAA,iDAEE;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGGV,IAAI,CAACe,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF,eAyBE;AACE,UAAA,SAAS,EAAEZ,MADb;AAEE,UAAA,OAAO,EAAE,YAAY;AACnB,kBAAMD,cAAc,CAACF,IAAI,CAACK,EAAN,CAApB;AACA,kBAAMD,SAAS,CAACJ,IAAI,CAACK,EAAN,CAAf;AACD,WALH;AAAA,oBAOGd;AAPH;AAAA;AAAA;AAAA;AAAA,gBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAAaS,IAAI,CAACK,EAAlB;AAAA;AAAA;AAAA;AAAA,YADF,CADH,GAwCG;AAzCN,mBADF;AA6CD,CAzDD;;KAAMN,K;AA2DN,eAAeA,KAAf","sourcesContent":["import { text } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { setOptions } from \"leaflet\";\r\nimport { useState } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport Button from \"./Button\";\r\n\r\nconst Spots = ({ spot, fetchSpotsById, toggleFavorite }) => {\r\n  let text = \"Add to favorites\";\r\n  let design =\r\n    \"bg-yellow-400 text-black text-sm rounded px-2 py-[0.15rem] hover:bg-yellow-500 \";\r\n  const toggleBtn = async (id) => {\r\n    await fetchSpotsById(id);\r\n    if (spot.favourite) {\r\n      text = \"Delete from favourite\";\r\n      design =\r\n        \" bg-yellow-400 text-black text-sm rounded px-2 py-[0.15rem] hover:bg-yellow-500 \";\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {Array.isArray(spot)\r\n        ? spot.map((spot) => (\r\n            <Marker key={spot.id} position={[spot.lat, spot.long]}>\r\n              <Popup>\r\n                <h1>{spot.name}</h1>\r\n                <h3>{spot.country}</h3>\r\n                <p>\r\n                  WIND PROBABILITY\r\n                  <br />\r\n                  {spot.probability}%\r\n                </p>\r\n                <p>\r\n                  LONGITUDE:\r\n                  <br />\r\n                  {spot.long}\r\n                </p>\r\n                <p>\r\n                  LATITUDE:\r\n                  <br />\r\n                  {spot.lat}\r\n                </p>\r\n                <p>\r\n                  WHEN TO GO:\r\n                  <br />\r\n                  {spot.month}\r\n                </p>\r\n                {/* Favorite OR Delete favorite btn */}\r\n\r\n                <button\r\n                  className={design}\r\n                  onClick={async () => {\r\n                    await toggleFavorite(spot.id);\r\n                    await toggleBtn(spot.id);\r\n                  }}\r\n                >\r\n                  {text}\r\n                </button>\r\n              </Popup>\r\n            </Marker>\r\n          ))\r\n        : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Spots;\r\n"]},"metadata":{},"sourceType":"module"}