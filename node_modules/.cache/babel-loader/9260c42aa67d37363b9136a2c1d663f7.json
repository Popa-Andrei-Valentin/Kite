{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Popa Andrei\\\\Desktop\\\\kite-surfing\\\\kite\\\\src\\\\components\\\\LocationTable.js\",\n    _s = $RefreshSig$();\n\nimport { COLUMNS } from \"./Columns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LocationTable = spot => {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = Array.isArray(spot) ? useMemo(() => spot, []) : null;\n  const tableInstance = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => {\n        /*#__PURE__*/\n        _jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LocationTable, \"5c1YknNXQiiiA6SOD7AsjX3UmaI=\", true);\n\n_c = LocationTable;\nexport default LocationTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationTable\");","map":{"version":3,"sources":["C:/Users/Popa Andrei/Desktop/kite-surfing/kite/src/components/LocationTable.js"],"names":["COLUMNS","LocationTable","spot","columns","useMemo","data","Array","isArray","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,WAAxB;;;AAEA,MAAMC,aAAa,GAAIC,IAAD,IAAU;AAAA;;AAC9B,QAAMC,OAAO,GAAGC,OAAO,CAAC,MAAMJ,OAAP,EAAgB,EAAhB,CAAvB;AACA,QAAMK,IAAI,GAAGC,KAAK,CAACC,OAAN,CAAcL,IAAd,IAAsBE,OAAO,CAAC,MAAMF,IAAP,EAAa,EAAb,CAA7B,GAAgD,IAA7D;AAEA,QAAMM,aAAa,GAAGC,QAAQ,CAAC;AAC7BN,IAAAA,OAD6B;AAE7BE,IAAAA;AAF6B,GAAD,CAA9B;AAKA,QAAM;AAAEK,IAAAA,aAAF;AAAiBC,IAAAA,iBAAjB;AAAoCC,IAAAA,YAApC;AAAkDC,IAAAA,IAAlD;AAAwDC,IAAAA;AAAxD,MACJN,aADF;AAEA,sBACE,sBAAWE,aAAa,EAAxB;AAAA,4BACE;AAAA,gBACGE,YAAY,CAACG,GAAb,CAAkBC,WAAD,IAAiB;AACjC;AAAA,2BAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,oBACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACvB,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,sBAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AAKD,OANA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,sBAAWV,iBAAiB,EAA5B;AAAA,gBACGE,IAAI,CAACE,GAAL,CAAUO,GAAD,IAAS;AACjBR,QAAAA,UAAU,CAACQ,GAAD,CAAV;AACA,4BACE,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,oBACGD,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAeU,IAAD,IAAU;AACvB,gCAAO,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,wBAA8BD,IAAI,CAACJ,MAAL,CAAY,MAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFA;AADH;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OATA;AADH;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CApCD;;GAAMpB,a;;KAAAA,a;AAsCN,eAAeA,aAAf","sourcesContent":["import { COLUMNS } from \"./Columns\";\r\n\r\nconst LocationTable = (spot) => {\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const data = Array.isArray(spot) ? useMemo(() => spot, []) : null;\r\n\r\n  const tableInstance = useTable({\r\n    columns,\r\n    data,\r\n  });\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    tableInstance;\r\n  return (\r\n    <table {...getTableProps()}>\r\n      <thead>\r\n        {headerGroups.map((headerGroup) => {\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map((column) => (\r\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n            ))}\r\n          </tr>;\r\n        })}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map((cell) => {\r\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\r\n              })}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default LocationTable;\r\n"]},"metadata":{},"sourceType":"module"}