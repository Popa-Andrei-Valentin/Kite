{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Popa Andrei\\\\Desktop\\\\kite-surfing\\\\kite\\\\src\\\\components\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { BsArrowDownShort, BsArrowUpShort } from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Table = _ref => {\n  _s();\n\n  let {\n    spot,\n    setSpots,\n    fetchSpots\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [order, setOrder] = useState(\"ASC\");\n  const [orderArrow, setArrow] = useState(\"\");\n  useEffect(() => {\n    const getSpots = async () => {\n      const spotsFromServer = await fetchSpots();\n      setSpots(spotsFromServer);\n    };\n\n    getSpots();\n  }, []); // Sorting function\n\n  const sorting = col => {\n    if (order === \"ASC\") {\n      const sorted = [...spot].sort((a, b) => a[col].toLowerCase() > b[col].toLowerCase() ? 1 : -1);\n      setSpots(sorted);\n      setArrow(\"up\");\n      setOrder(\"DSC\");\n    }\n\n    if (order === \"DSC\") {\n      const sorted = [...spot].sort((a, b) => a[col].toLowerCase() < b[col].toLowerCase() ? 1 : -1);\n      setSpots(sorted);\n      setArrow(\"down\");\n      setOrder(\"ASC\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"center\",\n      children: \"Locations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\",\n      onChange: event => {\n        setSearchTerm(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"w-full text-sm text-left text-gray-500 dark:text-gray-400\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-6 py-3\",\n            onClick: () => sorting(\"name\"),\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-6 py-3\",\n            onClick: () => sorting(\"country\"),\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-6 py-3\",\n            onClick: () => sorting(\"lat\"),\n            children: \"Latitude\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-6 py-3\",\n            onClick: () => sorting(\"long\"),\n            children: \"Longitude\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-6 py-3\",\n            onClick: () => sorting(\"probability\"),\n            children: \"Wind Prob.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-6 py-3\",\n            onClick: () => sorting(\"month\"),\n            children: \"When to go\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\",\n        children: Array.isArray(spot) ? spot.filter(spot => {\n          // Search function\n          if (searchTerm == \"\") {\n            return spot;\n          } else if ( // Searching location name\n          spot.name.toLowerCase().includes(searchTerm.toLowerCase()) || // Searching location country\n          spot.country.toLowerCase().includes(searchTerm.toLowerCase()) || // Searching month to go\n          spot.month.toLowerCase().includes(searchTerm.toLowerCase())) {\n            return spot;\n          }\n        }).map(spot => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: spot.favourite ? \"bg-yellow-300\" : \"bg-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-6 py-4 font-medium text-gray-900 dark:text-white whitespace-nowrap\",\n            children: spot.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-6 py-4\",\n            children: spot.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: spot.lat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: spot.long\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [spot.probability, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: spot.month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this)]\n        }, spot.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 19\n        }, this)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Table, \"1H5G3sVWQIkDVAr0qUJhA1ZyRJw=\");\n\n_c = Table;\nTable.defaultProps = {\n  currentSort: \"default\"\n};\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/Popa Andrei/Desktop/kite-surfing/kite/src/components/Table.js"],"names":["useState","useEffect","BsArrowDownShort","BsArrowUpShort","Table","spot","setSpots","fetchSpots","searchTerm","setSearchTerm","order","setOrder","orderArrow","setArrow","getSpots","spotsFromServer","sorting","col","sorted","sort","a","b","toLowerCase","event","target","value","Array","isArray","filter","name","includes","country","month","map","favourite","lat","long","probability","id","defaultProps","currentSort"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { BsArrowDownShort, BsArrowUpShort } from \"react-icons/bs\";\r\n\r\nconst Table = ({ spot, setSpots, fetchSpots }) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [order, setOrder] = useState(\"ASC\");\r\n  const [orderArrow, setArrow] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const getSpots = async () => {\r\n      const spotsFromServer = await fetchSpots();\r\n\r\n      setSpots(spotsFromServer);\r\n    };\r\n    getSpots();\r\n  }, []);\r\n  // Sorting function\r\n  const sorting = (col) => {\r\n    if (order === \"ASC\") {\r\n      const sorted = [...spot].sort((a, b) =>\r\n        a[col].toLowerCase() > b[col].toLowerCase() ? 1 : -1\r\n      );\r\n      setSpots(sorted);\r\n      setArrow(\"up\");\r\n      setOrder(\"DSC\");\r\n    }\r\n    if (order === \"DSC\") {\r\n      const sorted = [...spot].sort((a, b) =>\r\n        a[col].toLowerCase() < b[col].toLowerCase() ? 1 : -1\r\n      );\r\n      setSpots(sorted);\r\n      setArrow(\"down\");\r\n      setOrder(\"ASC\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"center\">Locations</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        onChange={(event) => {\r\n          setSearchTerm(event.target.value);\r\n        }}\r\n      />\r\n      <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\r\n        <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n          <tr>\r\n            <th className=\"px-6 py-3\" onClick={() => sorting(\"name\")}>\r\n              Name\r\n            </th>\r\n            <th className=\"px-6 py-3\" onClick={() => sorting(\"country\")}>\r\n              Country\r\n            </th>\r\n            <th className=\"px-6 py-3\" onClick={() => sorting(\"lat\")}>\r\n              Latitude\r\n            </th>\r\n            <th className=\"px-6 py-3\" onClick={() => sorting(\"long\")}>\r\n              Longitude\r\n            </th>\r\n            <th className=\"px-6 py-3\" onClick={() => sorting(\"probability\")}>\r\n              Wind Prob.\r\n            </th>\r\n            <th className=\"px-6 py-3\" onClick={() => sorting(\"month\")}>\r\n              When to go\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\">\r\n          {/* Checking if API fetch is done */}\r\n          {Array.isArray(spot)\r\n            ? spot\r\n                .filter((spot) => {\r\n                  // Search function\r\n                  if (searchTerm == \"\") {\r\n                    return spot;\r\n                  } else if (\r\n                    // Searching location name\r\n                    spot.name\r\n                      .toLowerCase()\r\n                      .includes(searchTerm.toLowerCase()) ||\r\n                    // Searching location country\r\n                    spot.country\r\n                      .toLowerCase()\r\n                      .includes(searchTerm.toLowerCase()) ||\r\n                    // Searching month to go\r\n                    spot.month.toLowerCase().includes(searchTerm.toLowerCase())\r\n                  ) {\r\n                    return spot;\r\n                  }\r\n                })\r\n                .map((spot) => (\r\n                  <tr\r\n                    key={spot.id}\r\n                    className={spot.favourite ? \"bg-yellow-300\" : \"bg-gray-200\"}\r\n                  >\r\n                    <th className=\"px-6 py-4 font-medium text-gray-900 dark:text-white whitespace-nowrap\">\r\n                      {spot.name}\r\n                    </th>\r\n                    <td className=\"px-6 py-4\">{spot.country}</td>\r\n                    <td>{spot.lat}</td>\r\n                    <td>{spot.long}</td>\r\n                    <td>{spot.probability}%</td>\r\n                    <td>{spot.month}</td>\r\n                    <td />\r\n                  </tr>\r\n                ))\r\n            : null}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nTable.defaultProps = {\r\n  currentSort: \"default\",\r\n};\r\nexport default Table;\r\n"]},"metadata":{},"sourceType":"module"}